#summary User Guidelines - Property file configuration and usage.
#sidebar UG_SideBar

= Property file configuration and usage =

_*Since: 0.5.0*_

*Content*
<wiki:toc max_depth="3" />


== Default values ==
Property values in the file:
{{{
${artifactId}-config.properties
}}}
should always be configured with values that make integration tests portable between users/hosts/operating systems. In other words: user specific credentials or absolute file paths should not be used.

Example: use a relative file path to keep integration test portable:
{{{
SFTPTOSFTP1_ARCHIVE_FOLDER=target/soitoolkit/archive/sftptosftp1
}}}

*Note:* credentials (like for FTP or SFTP) are generated with default values that works with the embedded resource managers to make integration tests portable.


== Override default values ==
Property values that are specific for test/production environments are configured by following these steps:

# Override property values with an override-file
  Override values in
  the file:
  {{{
  ${artifactId}-config.properties
  }}}
  with values in a file named (you have to create this file):
  {{{
  ${artifactId}-config-override.properties
  }}}
  and placing the override file on the classpath.
  *Note:* The override file should not be added to source-control as part of the classpath for an integration-component since the override file would then be used integration tests are run - and probably causing the tests to fail.
# Placing the override-file on the classpath
  For a standalone Mule-installation, put the override-file in the $MULE_HOME/conf directory
# Adding encrypted property values
  The override-file is typically where encrypted values (se next section) are used.
  *Note:* Encrypted values should be avoided in the default property values since decryption requires some environment setup for integration tests to run.


== Encrypted passwords ==
Passwords in the property file can be encrypted using [http://www.jasypt.org jasypt].

*High level description for using encrypted passwords*
  # Select a _master password_ to use for encryption/decryption of passwords in the property file
  # Encrypt passwords for the property file using the _master password_ and the jasypt command line tool
  # Write the encrypted passwords in the property file
  # Configure the Mule-server environment with the _master password_ (to allow for runtime decryption of passwords from the property file)

*Detailed description for using encrypted passwords*
  # Select _master password_, example: MY_SECRET_MASTER_PASSWORD
  # Encrypt a password
    # Download jasypt command line tools http://www.jasypt.org/download.html
    # Unzip the jasypt-distribution
    # Encrypt a password:
{{{
bin $ cd /opt/sf/jasypt-1.8/bin
bin $ ./encrypt.sh input="PASSWORD_TO_ENCRYPT_FOR_PROPERTY_FILE" password=MY_SECRET_MASTER_PASSWORD

----ENVIRONMENT-----------------

Runtime: Apple Inc. Java HotSpot(TM) 64-Bit Server VM 20.4-b02-402 

----ARGUMENTS-------------------

input: PASSWORD_TO_ENCRYPT_FOR_PROPERTY_FILE
password: MY_SECRET_MASTER_PASSWORD

----OUTPUT----------------------

Sc2JJ0XmftcDg2472aXVrVtj6pq23eevHFRplV/WYgynlUhLRpF8n9yiH+6q70gn

}}}
  # Write the encrypted password (i.e. the value after OUTPUT in the previous step) in the property file. Note the syntax with: ENC(encrypted-password)
{{{
MY_DATABASE_PASSWORD=ENC(Sc2JJ0XmftcDg2472aXVrVtj6pq23eevHFRplV/WYgynlUhLRpF8n9yiH+6q70gn)
}}}
  # Configure the Mule-server environment with the _master password_:
    # For Mule standalone, edit $MULE_HOME/conf/wrapper.conf, add:
  {{{
  set.SOITOOLKIT_ENCRYPTION_PASSWORD=MY_SECRET_MASTER_PASSWORD
  }}}
  Ref: http://wrapper.tanukisoftware.com/doc/english/props-envvars.html

*Note:* encrypted passwords should only be used in the ${artifactId}-config-override.properties file to avoid exposing the _master password_. Anyway, to test usage of encrypted passwords when running Mule from Eclipse or Maven you can:
  # For running tests in eclipse, open "Run configurations" for the junit-testsuite and add environment variable SOITOOLKIT_ENCRYPTION_PASSWORD=MY_SECRET_MASTER_PASSWORD
  # For running tests with maven: export SOITOOLKIT_ENCRYPTION_PASSWORD=MY_SECRET_MASTER_PASSWORD and then run your desired Maven-goal. Use "set" instead of "export" on Windows.
