#summary How to generate a Service using Maven
#sidebar UG_SideBar

=Generate a Service using Maven=

*Content*
<wiki:toc max_depth="2" />

= Introduction =

The generator can be launched with the command: 

{{{
mvn soitoolkit-generator:genService -Darg1=value1 ...
}}}

E.g.:

{{{
mvn soitoolkit-generator:genService -Dservice=sample1 -DmessageExchangePattern=Request/Response
}}}

The generators can also be launched with a longer command-form, see [UG_UsingGenerators Using the source code generators] for differences in usage of the two variants. 


= Parameters =

All parameters are optional.

|| *Name* || *Type* || *Default Value* || *Description* ||
|| outDir || File || . (i.e. your current directory) || Location of the output folder. ||
|| artifactId || String || sample1 || The artifactId of the Integration Component.  ||
|| groupId || String || org.sample || The groupId of the Integration Component. ||
|| version || String || 1.0.0-SNAPSHOT || The initial version of the Integration Component. ||
|| muleVersion || Enum  || 3.1.1 || The Mule version to use within the Integration Component. Allowed values: 3.1.1 ||
|| deployModel || Enum  || Standalone || The Mule deploy model to use for the Integration Component. Allowed values: Standalone, War ||
|| connectors || Enum || JDBC,FTP,SFTP || Declared connectors to be used by the Integration Component, specified as a comma separated list without any space characters. The JMS connector is required and does not need to be specified. Allowed values: JDBC,FTP,SFTP,SERVLET ||
|| groovyModel || URL || not specified || Groovy model for customizing the generator. Example: [http://soi-toolkit.googlecode.com/svn/trunk/tools/soitoolkit-generator/soitoolkit-generator/src/test/java/org/soitoolkit/tools/generator/model/GroovyModelImpl.groovy http://.../GroovyModelImpl.groovy]  ||


= Example =

== Create a request/response SOAP to REST proxy ==
You can add any of the parameters described above to the generator command, e.g. creating a SOAP to REST proxy in the integration component ic1:

{{{
cd ic1/trunk/ic1-services/
mvn soitoolkit-generator:genService -Dservice=sample1 -DmessageExchangePattern=Request/Response -DinboundTransport=SOAPHTTP -DoutboundTransport=RESTHTTP
}}}

It will then create an integration component using the values you have supplied:

{{{
...
[INFO] Scanning for projects...
[INFO] Searching repository for plugin with prefix: 'soitoolkit-generator'.
[INFO] ------------------------------------------------------------------------
[INFO] Building ic1-services
[INFO]    task-segment: [soitoolkit-generator:genService] (aggregator-style)
[INFO] ------------------------------------------------------------------------
[INFO] [soitoolkit-generator:genService {execution: default-cli}]
[INFO] 
[INFO] ==========================
[INFO] = Creating a new Service =
[INFO] ==========================
[INFO] 
[INFO] ARGUMENTS:
[INFO] (change an arg by suppling: -Darg=value):
[INFO] 
[INFO] outDir=/Users/magnuslarsson/Documents/temp/st-test/ic1/ic1/trunk/ic1-services
[INFO] service=sample1
[INFO] messageExchangePattern=Request/Response
[INFO] inboundTransport=SOAPHTTP
[INFO] outboundTransport=RESTHTTP
[INFO] 
[INFO] EXTRACTED POM-INFO:
[INFO] (from /Users/magnuslarsson/Documents/temp/st-test/ic1/ic1/trunk/ic1-services/pom.xml)
[INFO] artifactId=ic1
[INFO] groupId=org.myorg.ic1
[INFO] 
[INFO] Generate files from templateFolder: /requestResponseService
[INFO] Creates a Request/Response-service, inbound transport: SOAPHTTP, outbound transport: RESTHTTP, type of transformer: JAVA
[INFO] Created file: /Users/magnuslarsson/Documents/temp/st-test/ic1/ic1/trunk/ic1-services/src/main/resources/services/sample1-service.xml, size: 3201
[INFO] Created directory: /Users/magnuslarsson/Documents/temp/st-test/ic1/ic1/trunk/ic1-services/src/main/java/org/myorg/ic1/sample1
[INFO] Created file: /Users/magnuslarsson/Documents/temp/st-test/ic1/ic1/trunk/ic1-services/src/main/java/org/myorg/ic1/sample1/Sample1RequestTransformer.java, size: 759
[INFO] Created file: /Users/magnuslarsson/Documents/temp/st-test/ic1/ic1/trunk/ic1-services/src/main/java/org/myorg/ic1/sample1/Sample1ResponseTransformer.java, size: 1271
[INFO] Created file: /Users/magnuslarsson/Documents/temp/st-test/ic1/ic1/trunk/ic1-services/src/test/resources/testfiles/sample1-request-input.xml, size: 133
[INFO] Created file: /Users/magnuslarsson/Documents/temp/st-test/ic1/ic1/trunk/ic1-services/src/test/resources/testfiles/sample1-request-expected-result.csv, size: 23
[INFO] Created file: /Users/magnuslarsson/Documents/temp/st-test/ic1/ic1/trunk/ic1-services/src/test/resources/testfiles/sample1-response-input.rest, size: 15
[INFO] Created file: /Users/magnuslarsson/Documents/temp/st-test/ic1/ic1/trunk/ic1-services/src/test/resources/testfiles/sample1-response-expected-result.xml, size: 174
[INFO] Created file: /Users/magnuslarsson/Documents/temp/st-test/ic1/ic1/trunk/ic1-services/src/test/resources/teststub-services/sample1-teststub-service.xml, size: 1030
[INFO] Created directory: /Users/magnuslarsson/Documents/temp/st-test/ic1/ic1/trunk/ic1-services/src/test/java/org/myorg/ic1/sample1
[INFO] Created file: /Users/magnuslarsson/Documents/temp/st-test/ic1/ic1/trunk/ic1-services/src/test/java/org/myorg/ic1/sample1/Sample1IntegrationTest.java, size: 4420
[INFO] Created file: /Users/magnuslarsson/Documents/temp/st-test/ic1/ic1/trunk/ic1-services/src/test/java/org/myorg/ic1/sample1/Sample1RequestTransformerTest.java, size: 910
[INFO] Created file: /Users/magnuslarsson/Documents/temp/st-test/ic1/ic1/trunk/ic1-services/src/test/java/org/myorg/ic1/sample1/Sample1ResponseTransformerTest.java, size: 1021
[INFO] Created file: /Users/magnuslarsson/Documents/temp/st-test/ic1/ic1/trunk/ic1-services/src/test/java/org/myorg/ic1/sample1/Sample1TestConsumer.java, size: 1581
[INFO] Created file: /Users/magnuslarsson/Documents/temp/st-test/ic1/ic1/trunk/ic1-services/src/test/java/org/myorg/ic1/sample1/Sample1TestProducer.java, size: 1354
[INFO] Appending to property file: /Users/magnuslarsson/Documents/temp/st-test/ic1/ic1/trunk/ic1-services/src/environment/ic1-config.properties
[INFO] Appending to property file: /Users/magnuslarsson/Documents/temp/st-test/ic1/ic1/trunk/ic1-services/src/environment/ic1-security.properties
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 3 seconds
[INFO] Finished at: Fri Apr 08 06:43:07 CEST 2011
[INFO] Final Memory: 21M/265M
[INFO] ------------------------------------------------------------------------
MagnusMac-2:ic1-services magnuslarsson$ 
...
}}}

It will result in a folder structure like:

{{{
|-- pom.xml
`-- src
    |-- environment
    |   |-- ic1-config.properties
    |   |-- ic1-security.properties
    |   |-- log4j.dtd
    |   `-- log4j.xml
    |-- main
    |   |-- java
    |   |   `-- org
    |   |       `-- myorg
    |   |           `-- ic1
    |   |               `-- sample1
    |   |                   |-- Sample1RequestTransformer.java
    |   |                   `-- Sample1ResponseTransformer.java
    |   `-- resources
    |       |-- ic1-common.xml
    |       |-- ic1-config.xml
    |       `-- services
    |           `-- sample1-service.xml
    `-- test
        |-- java
        |   `-- org
        |       `-- myorg
        |           `-- ic1
        |               |-- Ic1MuleServer.java
        |               `-- sample1
        |                   |-- Sample1IntegrationTest.java
        |                   |-- Sample1RequestTransformerTest.java
        |                   |-- Sample1ResponseTransformerTest.java
        |                   |-- Sample1TestConsumer.java
        |                   `-- Sample1TestProducer.java
        `-- resources
            |-- ic1-teststubs-and-services-config.xml
            |-- ic1-teststubs-only-config.xml
            |-- testfiles
            |   |-- sample1-request-expected-result.csv
            |   |-- sample1-request-input.xml
            |   |-- sample1-response-expected-result.xml
            |   `-- sample1-response-input.rest
            `-- teststub-services
                `-- sample1-teststub-service.xml
}}}


You can test the service with standard maven commands:

{{{
mvn test
}}} 

Or run the junit tests inside your Java IDE, e.g.g Eclipse.

{{{
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 20.896 sec
Running org.myorg.ic1.sample1.Sample1RequestTransformerTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.032 sec
Running org.myorg.ic1.sample1.Sample1ResponseTransformerTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec

Results :

Tests run: 5, Failures: 0, Errors: 0, Skipped: 0

[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
[INFO] ------------------------------------------------------------------------
}}}

== Create an one-way file-adapter ==