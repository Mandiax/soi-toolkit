#summary Guidelines for developers of the soi-toolkit
#labels Phase-Implementation

*Content*

<wiki:toc max_depth="2" />

= Introduction =

Guidelines for developers of the soi-toolkit...


<wiki:comment>
soi-toolkit is based on the following components:
|| *Name* || *Svn-path* || *Description* ||
|| commons-schemas || trunk/commons/components/commons-schemas || TBS ||
|| commons-log || trunk/commons/components/commons-log || TBS ||
|| commons-mule || trunk/commons/components/commons-mule || TBS ||
|| default-parent || trunk/commons/poms/default-parent || TBS ||
|| assembly-descriptors || trunk/commons/poms/assembly-descriptors || TBS ||
|| soitoolkit-generator-plugin || trunk/tools/soitoolkit-generator || TBS ||

All components in soi-toolkit has one and the same release cycle (i.e. cm scope) and are released together as described below.
</wiki:comment>

= Initial setup of development environment=

See the wiki page [DG_InitialSetup Initial Setup].

= Running tests =

== Maven based tests ==

{{{
cd .../trunk
mvn clean install
}}}

*Note:* {{{mvn clean test}}} is actually sufficient but since the generator tests (see below) need the latest binaries in the local maven repository to run successfully {{{mvn clean install}}} is required anyhow.

== Generator tests ==

The generator is for now both tested and built manually using the built in support in Eclipse for building Eclipse-plugins.

Use Eclipse to run all tests in the project {{{soitoolkit-generator-plugin}}}.

= Running the code generator from source =
If you want to try out the code generator based on the source code in trunk you can do the following:

 * Ensure you have the latest code base in trunk

{{{
cd .../trunk
svn up
}}}

 * Build and install the lastes runtime components of soi-toolkit in your local maven repository based on the code in trunk

{{{
mvn clean install
}}}

 * Start the soi-toolkit generator plugin in a separate Eclipse runtime workspace

 In eclipse ensure that you have imported the soi-toolkit eclipse-plugin project, soi-toolkit/tools/soitoolkit-generator/soitoolkit-generator-plugin

  * Rightclick the project soitoolkit-generator-plugin and select "Run As --> Eclipse Application"

 * Launch the soi-toolkit generator wizard in the new Eclipse workspace and proceed as normal...

=Continuous Integration=
The soi-toolkit project uses Hudson as its continuous integration server. 
Builds are performed after every commit to subversion and snapshots are published on a daily basis.
Hudson runs as a cloud service, see [https://soi-toolkit.ci.cloudbees.com/ Hudson@CloudBees].

= Creating a branch in svn =

Not very frequently required but this is how it can be done :-)

Based on that you have the whole svn-tree checked out (trunk, branches, tags and so on)

*NOTE:* An alternate and maybe better way is to perform the svn copy command directly towards the svn-repo but this is how its done for now

 * Go to the svn root in your local file system

{{{
cd .../your-soi-toolkit-svn-root
}}}

 * Ensure that the state in trunk is as expected

{{{
svn st -u trunk
}}}

 * Copy trunk to a new branch locally

{{{
svn copy trunk branches/soitoolkit-mule-2.2.x
}}}

 * Verify the state in the new branch

{{{
svn st -u branches/soitoolkit-mule-2.2.x
}}}

 * Revert any non committed changes on trunk that was copied to the branch
 For example you might have non-committed changes in the file soi_toolkit_generator_plugin_default_preferences.properties that you don't want to be copied to the new branch.

{{{
svn revert branches/soitoolkit-mule-2.2.x/tools/soitoolkit-generator/soitoolkit-generator-plugin/src/soi_toolkit_generator_plugin_default_preferences.properties
}}}

 * Commit the branch.

{{{
svn ci branches/soitoolkit-mule-2.2.x -m "Branch for mule-2.2.x fixes"
}}}

 
= Publish snapshots =

To manually publish a snapshot of soi-toolkit do:
{{{
mvn clean deploy
mvn clean deploy -f commons/poms/mule-dependencies/mule-2.2.5-dependencies/pom.xml
mvn clean deploy -f commons/poms/mule-dependencies/mule-2.2.7-dependencies/pom.xml
mvn clean deploy -f commons/poms/mule-dependencies/mule-3.0.0-dependencies/pom.xml
}}}

Snapshot artifacts are deployed to the repository https://oss.sonatype.org/content/repositories/snapshots/org/soitoolkit

= Release handling =

See the wiki page [DG_ReleaseHandling Release Handling].

= Naming Conventions =

Version numbers:
 * {{{n.n.n}}} for releases
 * {{{soitoolkit-n.n.n}}} for svn tags of releases
 * {{{n.n.n-SNAPSHOT}}} for unreleased snapshots used during development