#summary Guidelines for developers of the soi-toolkit

= Developer Guidelines =

*Content*

<wiki:toc max_depth="2" />

= Introduction =

The soi-toolkit project is an open source project, read here for [DG_HowItWorks How It Works].

Committers needs to sign an [http://soi-toolkit.googlecode.com/svn/licenses/soi-toolkit-icla.txt Individual Contributor License Agreement (ICLA)].

= Guidelines for developers of the soi-toolkit =

<wiki:comment>
soi-toolkit is based on the following components:
|| *Name* || *Svn-path* || *Description* ||
|| commons-schemas || trunk/commons/components/commons-schemas || TBS ||
|| commons-log || trunk/commons/components/commons-log || TBS ||
|| commons-mule || trunk/commons/components/commons-mule || TBS ||
|| default-parent || trunk/commons/poms/default-parent || TBS ||
|| assembly-descriptors || trunk/commons/poms/assembly-descriptors || TBS ||
|| soitoolkit-generator-plugin || trunk/tools/soitoolkit-generator || TBS ||

All components in soi-toolkit has one and the same release cycle (i.e. cm scope) and are released together as described below.
</wiki:comment>

== Initial setup of development environment ==

See the wiki page [DG_InitialSetup Initial Setup].

== Running tests ==

=== Maven based tests ===

{{{
cd .../trunk
mvn clean install
}}}

*Note:* {{{mvn clean test}}} is actually sufficient but since the generator tests (see below) need the latest binaries in the local maven repository to run successfully {{{mvn clean install}}} is required anyhow.

=== Generator tests ===

The generator is for now both tested and built manually using the built in support in Eclipse for building Eclipse-plugins.

Use Eclipse to run all tests in the project {{{soitoolkit-generator-plugin}}}.

== Running the code generator as a eclipse wizard from source ==
If you want to try out the code generator based on the source code in trunk you can do the following:

 * Ensure you have the latest code base in trunk

{{{
cd .../trunk
svn up
}}}

 * Build and install the lastes runtime components of soi-toolkit in your local maven repository based on the code in trunk

{{{
mvn clean install
}}}

 * Manually copy the newly build jar-files soitoolkit-commons-xml-0.5.0-SNAPSHOT.jar and soitoolkit-generator-0.5.0-SNAPSHOT.jar from their target folders to the lib-folder /soitoolkit-generator-plugin/lib.

 * Start the soi-toolkit generator plugin in a separate Eclipse runtime workspace

 In eclipse ensure that you have imported the soi-toolkit eclipse-plugin project, soi-toolkit/tools/soitoolkit-generator/soitoolkit-generator-plugin
  * Rightclick the project soitoolkit-generator-plugin and select "Run As --> Eclipse Application"

 * Launch the soi-toolkit generator wizard in the new Eclipse workspace and proceed as normal...

== Testing snapshot versions of soi-toolkit ==

See the wiki page [DG_TestingSnapshotVersions Testing snapshot versions of soi-toolkit].

== Continuous Integration ==
The soi-toolkit project uses Jenkins as its continuous integration server. 
Builds are performed after every commit to subversion and snapshots are published on a daily basis.
Jenkins runs as a cloud service, see [https://soi-toolkit.ci.cloudbees.com/ Jenkins@CloudBees].

== Creating a branch in svn ==

Not very frequently required but this is how it can be done :-)

Based on that you have the whole svn-tree checked out (trunk, branches, tags and so on)

*NOTE:* An alternate and maybe better way is to perform the svn copy command directly towards the svn-repo but this is how its done for now

 * Go to the svn root in your local file system

{{{
cd .../your-soi-toolkit-svn-root
}}}

 * Ensure that the state in trunk is as expected

{{{
svn st -u trunk
}}}

 * Copy trunk to a new branch locally

{{{
svn copy trunk branches/soitoolkit-mule-2.2.x
}}}

 * Verify the state in the new branch

{{{
svn st -u branches/soitoolkit-mule-2.2.x
}}}

 * Revert any non committed changes on trunk that was copied to the branch
 For example you might have non-committed changes in the file soi_toolkit_generator_plugin_default_preferences.properties that you don't want to be copied to the new branch.

{{{
svn revert branches/soitoolkit-mule-2.2.x/tools/soitoolkit-generator/soitoolkit-generator-plugin/src/soi_toolkit_generator_plugin_default_preferences.properties
}}}

 * Commit the branch.

{{{
svn ci branches/soitoolkit-mule-2.2.x -m "Branch for mule-2.2.x fixes"
}}}

 
== Publish snapshots ==

To manually publish a snapshot of soi-toolkit do:
{{{
mvn clean deploy
mvn clean deploy -f commons/poms/mule-dependencies/mule-2.2.5-dependencies/pom.xml
mvn clean deploy -f commons/poms/mule-dependencies/mule-2.2.7-dependencies/pom.xml
mvn clean deploy -f commons/poms/mule-dependencies/mule-3.0.0-dependencies/pom.xml
}}}

Snapshot artifacts are deployed to the repository https://oss.sonatype.org/content/repositories/snapshots/org/soitoolkit


== Publish snapshots of the Eclipse plugin ==

 * Edit the following files:
  * {{{trunk/tools/soitoolkit-generator/soitoolkit-generator-plugin/META-INF/MANIFEST.MF}}}
 {{{
Bundle-Version: 0.4.1.SNAPSHOT_2011-03-28_0941
 }}}
  * {{{trunk/tools/soitoolkit-generator/org.soitoolkit.generator.update/site.xml}}}
 {{{
/site/feature/@version: 0.4.1.SNAPSHOT_2011-03-28_0941 --> 0.4.1
 }}}
  * {{{trunk/tools/soitoolkit-generator/org.soitoolkit.generator.update/site.xml}}}
 {{{
/site/feature/@url: features/org.soitoolkit.generator.feature_0.4.1.SNAPSHOT_2011-03-28_0941.jar --> features/org.soitoolkit.generator.feature_0.4.1.jar
 }}}
  * {{{trunk/tools/soitoolkit-generator/org.soitoolkit.generator.feature/feature.xm}}}
 {{{
/feature/@version: 0.4.1.SNAPSHOT_2011-03-28_0941 --> 0.4.1
 }}}

 * Build the update site in Eclipse
 * Push the update site to http://soi-toolkit.merikan.com/myUpdateSite with name like soitoolkit_0.5.0.SNAPSHOT_2011-11-19_1655
 * Update eclipse-update-snapshot-site/compositeContent.xml and compositeArtifacts.xml in svn so that they point out the new folder in the snapshot-update-site

== Release handling ==

See the wiki page [DG_ReleaseHandling Release Handling].

== Naming Conventions ==

Version numbers:
 * {{{n.n.n}}} for releases
 * {{{soitoolkit-n.n.n}}} for svn tags of releases
 * {{{n.n.n-SNAPSHOT}}} for unreleased snapshots used during development