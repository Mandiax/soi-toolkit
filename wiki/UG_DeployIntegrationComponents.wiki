#summary User Guidelines - Deploying an Integration Component.
#sidebar UG_SideBar

*Content*
<wiki:toc max_depth="3" />

= Deploying an Integration Component =

An integration component is deployed based on a released version typically picked up from the internal Maven repository.

Before you can deploy to Tomcat you have to setup a directory structure on the server for holding configuration and log-files for the integration component.

== Initial setup ==

=== Configure Tomcat with a user for deployment ===
In the $TOMCAT_HOME/conf/tomcat-users.xml file, add a user like:
{{{
<user username="deployer" password="SET_YOUR_OWN_PASSWORD" roles="manager"/>
}}}


=== Setup a directory structure for the Integration Component on the server ===

Create the following directory structure under the app-home folder on the server:
 
{{{
${app.home}
   ${artifactId}
      config
      logs
}}}

The directory structure will be used to hold configuration files, log-files and other files used by the Integration Components, e.g. archive for data files processed by the component.

*Note:*  ${app.home} is an environment variable pointing to the app-home folder on the server and ${artifactId} is the artifact-id of your Integration Component.
The app.home variable should have been configured when installing the Tomcat server, see [InstallationGuide#Installing_Apache_Tomcat]

== Setup configuration files ==

 # Copy and/or update files from the folder {{{src/main/environment}}} in the project to folder {{{${app.home}/${artifactId}/config}}} on the server
 # Perform nessecary configuration, e.g.
  * update the configuration of (s)ftp-servers, jms providers and/or jdbc-datasources if used in the config-file
  * change URL's of endpoints in the config-file
  * update username and passwords in the security-file
  * configure log4j to log to files in a appropriate way, using rolling log-files instead of logging to the console...

== Download deploy-files ==

Copy war files from the maven repository to a local folder.

The war-files are typically stored in the maven repository in a form similar to:

{{{
- http://host/repositories/releases/${groupId}/${artifactId}/${version}/${artifactId}-${version}.war
- http://host/repositories/releases/${groupId}/${artifactId}-teststubs/${version}/${artifactId}-teststubs-${version}.war
}}}

Rename the downloaded war-files to {{{${artifactId}.war}}} and {{{${artifactId}-teststubs.war}}}.

== Undeploy existing versions of the integration component ==

Use Tomcat Web Application Manager to undeploy any already deployed versions of the integration component.

== Deploy ==

Use Tomcat Web Application Manager to deploy the integration components artifacts.