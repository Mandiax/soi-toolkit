#summary User Guidelines - Customizing a Maven parent POM for Integration Components.

*Content*
<wiki:toc max_depth="3" />

= Customizing a Maven parent POM for Integration Components =

Integration components are generated with a default Maven parent POM. The main purpose of the default parent POM is to provide Integration Components with:
  * build repeatability by specifying Maven plugin versions in the `<pluginManagement>` section
  * classpath stability by specifying versions of common dependencies in the `<dependencyManagement>` section

 http://soi-toolkit.googlecode.com/svn/wiki/UserGuide/CustomMavenParentPom/default-parent-pom.png


== Reasons for using a custom parent POM ==
There are several reasons for replacing the default parent POM with a custom POM for your organization, for example:
 # If you are deploying/releasing to a Maven repository you need to add a `<distributionManagement>` section to the POM.
  * You likely want to use the same `<distributionManagement>` information for all Integration Components in your organization so you would typically only want to define it in one place, which would be in the parent POM for all Integration Components.
 # If you want to use custom Maven-repositories for dependencies (in a POM `<repositories>` section).
  * The same goes here as for `<distributionManagement>`, you only want to define the information in one place.
 # If your organization already has an organization wide, top-level POM that you want to re-use.

== Options for customizing a parent POM ==
 # There is an existing organization-wide parent POM that you want to use
  * In this case you probably want to define a custom parent-POM that has the organization POM as a parent, since you probably don't want to update the organizational POM for the requirements put up by the default parent POM. You also probably don't wan't to update the organizational POM for new releases of SOI-Toolkit that might require changes to a custom parent POM.
 # There is no existing parent POM that you want to use
  * This is probably the simplest way since you don't need to care about definitions (possibly conflicting) from any other POM.
  * In this case the simplest thing to do is to take a copy of the default parent POM provided by SOI-Toolkit, change artifactId and groupId in the copy to fit your organisation, and then add any customizations to the POM.

*TODO:*
  * in both cases: change parent of Integration Components to point to your custom parent POM
  * add examples with pictures